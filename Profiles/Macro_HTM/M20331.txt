// M20331 - HTM_ATC macro - by SeB
// macro for measuring tools in TCP. M20330 have to be run first (once)
// M20330 will provide the mcZpos of TCP sensor

// defining error sound file
System.Media.SoundPlayer errorSound = new System.Media.SoundPlayer(Application.StartupPath + @"\Flashscreen\SOUND\error.wav");
	
if(!exec.GetLED(56)||!exec.GetLED(57)||!exec.GetLED(58)) // If machine was not homed then it is unsafe to move in machine coordina	tes, stop here...
{
	exec.AddStatusmessage("Measure TCP Z measuring cannot start! One or more axis are NOT REFERENCED");
	errorSound.Play();
	exec.Stop();
	return;
}
	
// TCP (Tool Change Position) from ATC setup
double tcpXpos = AS3.Getfielddouble(30020);
double tcpYpos = AS3.Getfielddouble(30021);
double tcpZpos = AS3.Getfielddouble(30022);

double minZlimit = AS3.Getfielddouble(41);
double FeedrateSlow = AS3.Getfielddouble(2710);
double FeedrateFast = AS3.Getfielddouble(2709);
double FeedRate = AS3.Getfielddouble(30017);

double retractforsecondmeasurement = AS3.Getfielddouble(2706);

// mcZpos position - saved by M20330 macro with Master Tool with known length
double mcZpos = Convert.ToDouble(exec.Readkey("UserTextfields", "20330", "0"));

// getting current tool number, for measuring
int currentTool = exec.Getcurrenttool(); // Preluăm scula curentă - oldtool in scriptul Mach

bool dodualcycle =  AS3.Getbuttonstate(853); //Do probing from 2 cycles, first with Fast and second with Slow feedrates
// exec.AddStatusmessage(Convert.ToString(dodualcycle));

var varLength = Plugininterface.Datatypes.Tooltablecolumnname.Length;

// moving to TCP
	exec.Code("G53 G01 F" + FeedRate + " Z" + tcpZpos);
	exec.Code("G53 G01 F" + FeedRate + " Y" + tcpYpos);
	exec.Code("G53 G01 F" + FeedRate + " X" + tcpXpos);
	while(exec.IsMoving()){}

if(!dodualcycle)
{
  exec.Code("G31 Z" + minZlimit + "F" + FeedrateFast); // Do the Z probing with Fast feedrate first
  while(exec.IsMoving()){}

  // exec.Code("G91 G0 Z" + retractforsecondmeasurement);
  exec.Code("G91 G1 Z" + retractforsecondmeasurement + " F" + FeedrateFast);
  exec.Code("G90"); 
}
while(exec.IsMoving()){}

//coboram pana la touch, maxim pe cota minimZ definita in axe
exec.Code("G31 F" + FeedrateSlow + " Z" + minZlimit);
while(exec.IsMoving()){}

double currentZpos = exec.GetZmachpos();

	double currenToolOffset = Math.Abs(mcZpos) + exec.GetZmachpos();
	exec.AddStatusmessage("toolLength = " + currenToolOffset);

    exec.Writetooltablecell(currentTool, varLength, Convert.ToString(currenToolOffset)); // 
    exec.Callbutton(780); // Apelarea butonului pentru salvarea tooltable-ului
	exec.Code("G43 H" + currentTool);

	// search for the currentTool in slots. Update fields if found.
	for (int i = 1; i <= 10; i++) {
        if (currentTool == AS3.Getfieldint(20500 + i)) { 
            AS3.Setfieldtext(Convert.ToString(currenToolOffset), i+20520); // afisam lungimea sculei din slot
            AS3.Validatefield(i+20520); // validam inputul                      
        }
	}
	
	// updating tool edit fields
	exec.Code("M20400");
	
	// returning to tcpZpos
	exec.Code("G53 G01 F" + FeedRate + " Z" + tcpZpos);
